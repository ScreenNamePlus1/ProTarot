name: Build Kivy APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            git zip unzip autoconf automake libtool pkg-config zlib1g-dev \
            libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev \
            build-essential ccache \
            libjpeg-dev zlib1g-dev \
            python3-setuptools

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --user cython==3.0.10  # Updated for compatibility
          python -m pip install --user buildozer==1.5.0  # Latest version

      - name: Setup Android SDK
        run: |
          # Create Android SDK directory
          mkdir -p $HOME/android-sdk
          export ANDROID_HOME=$HOME/android-sdk
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          
          # Download and setup command line tools (latest version)
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O /tmp/cmdline-tools.zip
          unzip -q /tmp/cmdline-tools.zip -d /tmp
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          mv /tmp/cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
          
          # Add to PATH
          echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          
          # Accept licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || echo "License acceptance completed"
          
          # Install required components
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install \
            "build-tools;34.0.0" \  # Updated to latest stable
            "platforms;android-34" \  # Matches updated API
            "platform-tools"

      - name: Debug project structure
        run: |
          echo "=== Current directory ==="
          pwd
          echo "=== Python files ==="
          find . -name "*.py"
          echo "=== Image files ==="
          find . -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" || echo "No image files found"
          echo "=== Buildozer spec content ==="
          cat buildozer.spec || echo "buildozer.spec not found"

      - name: Build the APK
        run: |
          set -e  # Fail on errors
          export PATH=$HOME/.local/bin:$PATH
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          
          # Use the simplified buildozer spec (fallback if not present)
          if [ ! -f "buildozer.spec" ]; then
            echo "Creating simplified buildozer.spec..."
            cat > buildozer.spec << 'EOF'
          [app]
          title = Tarot with Pictures
          package.name = tarotapp
          package.domain = org.example
          version = 1.0
          
          requirements = python3,kivy==2.3.0
          
          source.dir = .
          source.include_exts = py,png,jpg,jpeg,kv
          source.include_patterns = images/*,*.png,*.jpg
          
          orientation = portrait
          fullscreen = 1
          
          android.entrypoint = org.kivy.android.PythonActivity
          android.permissions = INTERNET
          android.api = 34
          android.minapi = 21
          android.ndk = r27d
          android.accept_sdk_license = True
          
          android.archs = armeabi-v7a,arm64-v8a
          
          [buildozer]
          log_level = 2
          warn_on_root = 1
          EOF
          fi
          
          buildozer android debug
        env:
          ANDROID_HOME: /home/runner/android-sdk
          ANDROID_SDK_ROOT: /home/runner/android-sdk

      - name: List build artifacts
        if: always()
        run: |
          echo "Contents of bin directory:"
          ls -la bin/ || echo "No bin directory found"
          echo "Looking for APK files:"
          find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: tarot-app-debug
          path: bin/*.apk
          if-no-files-found: error  # Fail if no APK is produced
