name: Build Kivy APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            git zip unzip autoconf libtool pkg-config zlib1g-dev \
            libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev \
            automake build-essential ccache ant gradle \
            libjpeg-dev zlib1g-dev

      - name: Cache buildozer global directory
        uses: actions/cache@v4
        with:
          path: ~/.buildozer
          key: ${{ runner.os }}-buildozer-global-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-global-

      - name: Cache buildozer local directory
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: ${{ runner.os }}-buildozer-local-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-local-

      - name: Install Python dependencies
        run: |
          python -m pip install --user --upgrade pip setuptools wheel
          python -m pip install --user cython==0.29.33 buildozer==1.5.0

      - name: Setup Android SDK and NDK
        run: |
          # Create Android SDK directory
          mkdir -p $HOME/android-sdk
          export ANDROID_HOME=$HOME/android-sdk
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          
          # Download and setup command line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O /tmp/cmdline-tools.zip
          unzip -q /tmp/cmdline-tools.zip -d /tmp
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          mv /tmp/cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
          
          # Add to PATH
          echo "PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          
          # Accept licenses
          yes | sdkmanager --licenses || echo "License acceptance completed"
          
          # Install required components - match buildozer.spec requirements
          sdkmanager --install "build-tools;33.0.2" \
                     "platforms;android-33" \
                     "platform-tools" \
                     "tools"
          
          # Download NDK 25b to match buildozer.spec
          wget -q https://dl.google.com/android/repository/android-ndk-r25b-linux.zip -O /tmp/ndk.zip
          unzip -q /tmp/ndk.zip -d $ANDROID_HOME
          mv $ANDROID_HOME/android-ndk-r25b $ANDROID_HOME/ndk/25b

      - name: Verify environment setup
        run: |
          echo "Python version:"
          python --version
          echo "Buildozer version:"
          export PATH=$HOME/.local/bin:$PATH
          buildozer --version
          echo "Android SDK location: $ANDROID_HOME"
          echo "Java version:"
          java -version
          echo "NDK location:"
          ls -la $ANDROID_HOME/ndk/ || echo "NDK directory not found"

      - name: Debug project structure
        run: |
          echo "=== Current directory ==="
          pwd
          echo "=== All files ==="
          find . -type f | sort
          echo "=== Python files ==="
          find . -name "*.py"
          echo "=== Image files ==="
          find . -name "*.png" -o -name "*.jpg" -o -name "*.jpeg"
          echo "=== Buildozer spec content ==="
          cat buildozer.spec || echo "buildozer.spec not found"

      - name: Verify buildozer.spec and project structure
        run: |
          if [ ! -f "buildozer.spec" ]; then
            echo "Error: buildozer.spec not found!"
            exit 1
          fi
          echo "Project structure:"
          find . -type f -name "*.py" -o -name "*.png" -o -name "*.jpg" -o -name "*.spec" | head -20
          echo "Images directory:"
          ls -la images/ || echo "Images directory not found"

      - name: Build the APK
        run: |
          export PATH=$HOME/.local/bin:$PATH
          export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25b
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          
          # Clean any previous builds if they exist
          buildozer android clean || echo "No previous build to clean"
          
          # Build the APK
          buildozer -v android debug
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}

      - name: List build artifacts
        if: always()
        run: |
          echo "Contents of bin directory:"
          ls -la bin/ || echo "No bin directory found"
          echo "Looking for APK files:"
          find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: tarot-app-debug
          path: bin/*.apk
          if-no-files-found: error
