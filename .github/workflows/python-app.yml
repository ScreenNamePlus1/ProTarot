name: Build Tarot APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip autoconf libtool pkg-config \
            zlib1g-dev libncurses5-dev libncursesw5-dev \
            libtool wget curl lld imagemagick pngquant \
            python3-dev python3-pip python3-setuptools python3-wheel cython3

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install buildozer==1.5.0
          pip install cython==0.29.33
          pip install virtualenv

      - name: Use system Android SDK and setup buildozer directories
        run: |
          mkdir -p ~/.buildozer/android/platform
          ln -sf /usr/local/lib/android/sdk ~/.buildozer/android/platform/android-sdk
          yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager "platforms;android-33"
          /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager "build-tools;33.0.2"
          mkdir -p ~/.buildozer/android/platform/android-sdk/tools/bin
          cd ~/.buildozer/android/platform/android-sdk/tools/bin
          for tool in /usr/local/lib/android/sdk/cmdline-tools/latest/bin/*; do
            ln -sf "$tool" "$(basename "$tool")"
          done

      - name: Optimize images
        run: |
          find images/rider-waite-tarot -type f -name "*.png" -exec convert {} -resize 512x896 {} \;
          find images -type f -name "*.png" -exec pngquant --force --output {} {} \;
          # Convert any JPGs to PNGs without removing originals
          find images -type f \( -iname "*.jpg" -o -iname "*.jpeg" \) -exec sh -c 'convert "{}" "$(dirname "{}")/$(basename "{}" .jpg).png"' \;
          find images -type f \( -iname "*.jpg" -o -iname "*.jpeg" \) -exec sh -c 'pngquant --force --output "$(dirname "{}")/$(basename "{}" .jpg).png" "$(dirname "{}")/$(basename "{}" .jpg).png"' \;

      - name: Create gradle.properties
        run: |
          echo "org.gradle.jvmargs=-Xmx4096m" > gradle.properties

      - name: Verify SDK setup
        run: |
          echo "=== Checking SDK structure ==="
          ls -la ~/.buildozer/android/platform/android-sdk/
          echo "=== Checking tools/bin ==="
          ls -la ~/.buildozer/android/platform/android-sdk/tools/bin/
          echo "=== Testing sdkmanager ==="
          ~/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager --version

      - name: Clean buildozer project directory
        run: |
          rm -rf .buildozer

      - name: Build with buildozer
        env:
          JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
          ANDROID_HOME: /home/runner/.buildozer/android/platform/android-sdk
          ANDROID_SDK_ROOT: /home/runner/.buildozer/android/platform/android-sdk
          ANDROID_NDK_HOME: /home/runner/.buildozer/android/platform/android-ndk-r25b
        run: |
          buildozer android debug --verbose

      - name: Find and list APK
        if: always()
        run: |
          echo "=== All APK files ==="
          find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"
          echo "=== Bin directory ==="
          ls -la bin/ 2>/dev/null || echo "No bin directory"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tarot-apk
          path: |
            bin/*.apk
            .buildozer/android/platform/build*/dists/*/bin/*.apk
          retention-days: 30
